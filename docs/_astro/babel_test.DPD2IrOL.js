import{c as x,k as v,F as I,a as h,C as E,p as O,S as B,b as C,I as L,V as S,g as F,s as u,d as z,o as V}from"./konsole.1Z1AgOxG.js";const j=document.getElementById("code_editor"),b=document.getElementById("debug_editor"),p=document.getElementById("visualizer");let r,c,f;const t=document.getElementById("code_exec"),d=document.getElementById("next_exec"),y=document.getElementById("inject_btn"),g=document.getElementById("visualizer_btn"),i=document.getElementById("refresh_btn"),m=document.getElementById("all_breakpoints"),a=document.getElementById("stop_exec"),w=document.getElementById("dynamic_btn"),N=document.getElementById("save_btn"),P=document.getElementById("open_btn");async function R(e,n,s=!1){if(await window._line_Info_Hook(e,n),s){d.disabled=!1,a.disabled=!1,window.Editor.highlightLine(e),r.On_Refresh_Stack(),window.operationPromise=new Promise(_=>{window.resolveOperation=_});const o=await window.operationPromise;if(o.status!="continue")throw new Error(o.message);a.disabled=!0,window.Editor.deHilightLastLine()}}async function H(e,n){const s=window.Editor;if(!s)throw new Error("lineInfo : Editor not found");s.deHilightLastLine(),s.getLineElement(e)}async function A(){await i.onclick(null),t.disabled=!0,t.classList.add("executing"),i.disabled=!0,window.konsole=v(console),window._lineInfo=R,window._line_Info_Hook=H,window._on_end_execution=D,window._Frame_Creation=I,window._Frame_Deletion=h;const e=document.getElementById("_ScriptNode");e&&e.parentElement.removeChild(e);try{console.log(`

------------ Executing code --------------

`);const n=document.createElement("script");n.id="_ScriptNode",n.type="module";try{n.textContent=f.code,document.body.appendChild(n)}catch(s){console.log(s.message),document.body.removeChild(n),t.disabled=!1,t.classList.remove("executing"),i.disabled=!1,d.disabled=!0,a.disabled=!0}}catch(n){console.log(n.message),t.disabled=!1,t.classList.remove("executing"),i.disabled=!1,d.disabled=!0,a.disabled=!0}}async function D(){r.On_Refresh_Stack(),t.disabled=!1,d.disabled=!0,t.classList.remove("executing"),i.disabled=!1,console.log(`
------------ Execution ended --------------`)}async function T(){g.disabled=!0,y.disabled=!1,b.classList.add("closed"),p.classList.remove("closed")}async function q(){y.disabled=!0,g.disabled=!1,p.classList.add("closed"),b.classList.remove("closed")}async function G(){if(!window.resolveOperation)throw new Error("No code blocked!");window.resolveOperation({status:"continue"})}async function J(){if(!window.resolveOperation)throw new Error("No code blocked!");window.resolveOperation({status:"stopped",message:"Execution was stopped by user"})}let l=!1;async function K(e){console.clear();let n=c.code;const o=O(n,{ecmaVersion:"latest",onComment:[],allowAwaitOutsideFunction:!0});e.ast=o,e.OnRefreshTree(),B(o),C(o,l),L(o),console.log(o),console.log("Visit ast...");const _=await S(o);console.log("Code generation...");const k=F(_);f.setCode(k)}async function M(e){c=E(j,e),f=E(b,e),window.Editor=c,t.disabled=!1}async function Q(){l=!l,l?m.style.setProperty("background-color","red"):m.style.removeProperty("background-color")}async function U(){u.dynamic=!u.dynamic,u.dynamic?w.textContent="ðŸ‘‹":w.textContent="ðŸ¤š"}async function W(){z(c.code,"file.js")}async function X(){const e=await V();c.setCode(e)}async function Z(e=void 0){t.onclick=A,t.disabled=!0,M(e),g.onclick=T,y.onclick=q,d.onclick=G,r=new x("visualizer"),i.onclick=K.bind(this,r),m.onclick=Q,a.onclick=J,w.onclick=U,N.onclick=W,P.onclick=X}export{Z as m};
